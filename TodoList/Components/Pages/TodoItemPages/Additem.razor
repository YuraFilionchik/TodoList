@page "/additem"
@inject TodoList.Data.ApplicationDbContext DB
@using TodoList
@inject NavigationManager NavigationManager
<link rel="stylesheet" href="TodoList.styles.css" />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="TodoItem" OnValidSubmit="AddTodoItem" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <div class="mb-3">
                <label for="title" class="form-label">Title:</label> 
                <InputText id="title" @bind-Value="TodoItem.Title" class="form-control" /> 
                <ValidationMessage For="() => TodoItem.Title" class="text-danger" /> 
            </div>        
                  
            <div class="mb-3">
                <label for="description" class="form-label">Description:</label> 
                <InputText id="description" @bind-Value="TodoItem.Description" class="form-control" /> 
                <ValidationMessage For="() => TodoItem.Description" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="duedate" class="form-label">DueDate:</label> 
                <InputDate id="duedate" @bind-Value="TodoItem.DueDate" class="form-control" /> 
                <ValidationMessage For="() => TodoItem.DueDate" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="tags" class="form-label">Tags:</label> 
                <InputText id="tags" @bind-Value="TodoItem.Tags" class="form-control" /> 
                <ValidationMessage For="() => TodoItem.Tags" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="priority" class="form-label">Priority:</label> 
                <InputSelect id="priority" @bind-Value="TodoItem.Priority" class="form-control">
                    @foreach (PriorityType priority in Enum.GetValues(typeof(PriorityType)))
                    {
                        <option value="@priority">@priority.ToString()</option>
                    }
                </InputSelect> 
                <ValidationMessage For="() => TodoItem.Priority" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>


@code {
    [CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; } = default!;

    [SupplyParameterFromForm]
    public TodoItem TodoItem { get; set; } = new();

    async Task Close() => await BlazoredModal.CloseAsync(ModalResult.Ok(true));
    async Task Cancel() => await BlazoredModal.CancelAsync();

    // To protect from overposting attacks, see https://aka.ms/RazorPagesCRUD
    public async Task AddTodoItem()
    {
        DB.TodoItem.Add(TodoItem);
        await DB.SaveChangesAsync();
        //NavigationManager.NavigateTo("/");
    }
}

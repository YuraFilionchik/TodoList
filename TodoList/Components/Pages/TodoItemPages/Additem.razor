@page "/additem"
@inject TodoList.Data.ApplicationDbContext DB
@using TodoList
@using Telerik.Blazor.Components

<div class="row">
    <div class="col-md-10 mx-auto">
        <div class="card shadow-sm">
            <div class="card-body">
                <h5 class="card-title text-center mb-4">@todoItem.Title</h5>
                <TelerikForm Model="todoItem" OnValidSubmit="SubmitForm" ValidationMessageType="FormValidationMessageType.None">
                    <FormValidation>
                        <DataAnnotationsValidator />
                        <TelerikValidationSummary />
                    </FormValidation>

                    <FormItems>
                        <FormItem Field="@nameof(TodoItem.Title)" LabelText="Title:" Hint="Enter name of new note" Id="title">
                            
                        </FormItem>

                        <FormItem Field="@nameof(TodoItem.Description)" LabelText="Description:" Id="description">
                           
                        </FormItem>

                        <FormItem Field="@nameof(TodoItem.DueDate)" LabelText="Due Date:" Id="duedate">
                            
                        </FormItem>

                        <FormItem Field="@nameof(TodoItem.Tags)" LabelText="Tags:" Id="tags">
                            
                        </FormItem>

                        <FormItem Field="@nameof(TodoItem.Priority)" LabelText="Priority:" Id="priority">
                            
                        </FormItem>
                    </FormItems>

                    <FormButtons>
                        <TelerikButton ButtonType=Telerik.Blazor.ButtonType.Submit Class="k-primary">Add</TelerikButton>
                        <TelerikButton OnClick="Cancel" >Cancel</TelerikButton>
                    </FormButtons>
                </TelerikForm>
            </div>
        </div>
    </div>
</div>



@code {
    [CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; } = default!;

    [SupplyParameterFromForm]
    public TodoItem todoItem { get; set; } = new() { DueDate=DateTime.Now};
    [Parameter]
    public string userId { get; set; }
    protected override void OnInitialized() => BlazoredModal.SetTitle("Enter new task");
    async Task SubmitForm(){
        if (todoItem is null) return;
        todoItem.UserId = userId;
        DB.TodoItem.Add(todoItem);
        DB.SaveChanges();
        
        await BlazoredModal.CloseAsync();
    }
    async Task Cancel() => await BlazoredModal.CancelAsync();

    
}

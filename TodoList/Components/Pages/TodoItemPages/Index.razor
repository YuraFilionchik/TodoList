@using Microsoft.AspNetCore.Components.QuickGrid
@inject TodoList.Data.ApplicationDbContext DB
@using Microsoft.EntityFrameworkCore
@using TodoList
@rendermode InteractiveServer

<ViewItems items="DB.TodoItem.Where(x => (!x.IsDeleted) || DisplayDeletedItems)" @ref="itemgrid"></ViewItems>


@code {
    [CascadingParameter]
    public bool DisplayDeletedItems { get; set; }

    [Parameter]
    public ViewItems itemgrid { get; set; }

    [Parameter]
    public EventCallback<ViewItems> itemgridChanged { get; set; }

    [Parameter]
    public EventCallback<string> DataChanged { get; set; }

    public IQueryable<TodoItem> ItemsToDisplay = default!;

    //for update state after adding new
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
            await itemgridChanged.InvokeAsync(itemgrid);
    }

    void DeleteItem(TodoItem item)
    {
        item.IsDeleted = true;
        DB.SaveChanges();
        StateHasChanged();
        //DataChanged.InvokeAsync(nameof(DeleteItem));  
    }
}
@page "/"
@using Microsoft.AspNetCore.Components.QuickGrid
@using TodoList.Components.Pages.TodoItemPages
@inject TodoList.Data.ApplicationDbContext DB
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

@* <div id="menu">
    <ul>
        <li class="active"><a href="#">Все заметки</a></li>
        <li><a href="#">Личные</a></li>
        <li><a href="#">Работа</a></li>
        <li><a href="#">Учеба</a></li>
        <li><a href="#">Покупки</a></li>
        <li><a href="#">Путешествия</a></li>
        <li><button>Добавить заметку</button></li>
    </ul>
</div> *@
<PageTitle>Welcome</PageTitle>

<h2>ToDo list (Total = @DB.TodoItem.Count() | active = @DB.TodoItem.Count(c=>!c.IsDeleted))</h2>
<Index DisplayDeleted=@DisplayDeletedItems @bind-itemgrid="itemgrid" DataChanged="IndexDataChanged"/>
<div>
    <button class="btn btn-primary" @onclick="ShowModalAddNew">Add New item</button>
    <br/>
    <NavLink href="todoitems">View all items</NavLink>
</div>
Show deleted items:<InputCheckbox @bind-Value="DisplayDeletedItems"></InputCheckbox>
<p>Display deleted = @DisplayDeletedItems</p>

@code {

    public bool DisplayDeletedItems { get; set; } = false;

    [CascadingParameter] public IModalService BlazoredModal { get; set; } = default!;

    QuickGrid<TodoItem> itemgrid;

    async Task ShowModalAddNew()
    {        
        var messageForm = BlazoredModal.Show<Additem>();
        var result = await messageForm.Result;
        await itemgrid.RefreshDataAsync();
    }

    public void IndexDataChanged(string data)
    {
        if (data == "DeletedItem")
        {
            StateHasChanged();
        }
    }
}